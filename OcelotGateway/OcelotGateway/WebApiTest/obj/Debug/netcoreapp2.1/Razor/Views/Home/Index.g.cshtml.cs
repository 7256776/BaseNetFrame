#pragma checksum "C:\Users\zhoujianfeng\Desktop\新建文件夹 (2)\2\WebApiTest\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "687319290ecef7ff1dd7b22ac32d3d4d05ad06cf"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\zhoujianfeng\Desktop\新建文件夹 (2)\2\WebApiTest\Views\_ViewImports.cshtml"
using WebApiTest;

#line default
#line hidden
#line 2 "C:\Users\zhoujianfeng\Desktop\新建文件夹 (2)\2\WebApiTest\Views\_ViewImports.cshtml"
using WebApiTest.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"687319290ecef7ff1dd7b22ac32d3d4d05ad06cf", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f1ee4f895266f61d9255a996f48b5d1f68288a2c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Get", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "http://localhost:39643/OcelotGatewayB/SetUserInfo/参数", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "http://localhost:39643/OcelotGatewayB/GetUserData", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "http://localhost:39643/OcelotGatewayB/GetUser", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "http://localhost:39643/OcelotGatewayA/SetUserInfo/参数", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "http://localhost:39643/OcelotGatewayA/GetUserData", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\zhoujianfeng\Desktop\新建文件夹 (2)\2\WebApiTest\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 1154, true);
            WriteLiteral(@"
<div>
    <p>
        获取Token:<br />
        <input type=""text"" id=""tokenUrl"" value=""http://localhost:27749/connect/token"" style=""width:510px;"" />
        <input type=""button"" id=""btn"" value=""请求ToKey(ClientCredentials)"" onclick=""doClientCredentialsTokey()"" />
        <input type=""button"" id=""btn"" value=""请求ToKey(OwnerPassword)"" onclick=""doOwnerPasswordTokey()"" />


        <input type=""button"" id=""btn"" value=""请求ToKey(ACTION)"" onclick=""doTokeyAction()"" />

        <input type=""button"" id=""btn"" value=""刷新ToKey"" onclick=""doRefreshTokey()"" />
    </p>
    <p>
        Token:<br />
        <textarea id=""tokenTxt"" style=""width:1000px;height:100px;""></textarea>
    </p>
    <p>
        RefreshToken:<br />
        <textarea id=""refreshTokenTxt"" style=""width:1000px;height:50px;""></textarea>
    </p>
    <!-- ****************************************************************************************************************** -->
    <p>
        请求地址:<br />
        <input type=""text"" id=""actionUrl"" va");
            WriteLiteral("lue=\"http://localhost:39643/OcelotGatewayB/SetUserInfo/参数\" style=\"width:580px;\" />\r\n        <select id=\"actionType\">\r\n            ");
            EndContext();
            BeginContext(1199, 34, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1eb177c7b89e487e9200a0eddcc63e41", async() => {
                BeginContext(1220, 4, true);
                WriteLiteral("POST");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1233, 14, true);
            WriteLiteral("\r\n            ");
            EndContext();
            BeginContext(1247, 32, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4428bd6a7aa243b4ac122cd36b1eae21", async() => {
                BeginContext(1267, 3, true);
                WriteLiteral("GET");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1279, 248, true);
            WriteLiteral("\r\n        </select>\r\n        <input type=\"button\" id=\"btn\" value=\"Js请求\" onclick=\"doJsRequest()\" />\r\n        <input type=\"button\" id=\"btn\" value=\"Action请求\" onclick=\"doAction()\" />\r\n        <select id=\"urlSelect\" onchange=\"urlSelect()\">\r\n            ");
            EndContext();
            BeginContext(1527, 107, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c20e83eb4264049baf0f6e06a523951", async() => {
                BeginContext(1596, 29, true);
                WriteLiteral("OcelotGatewayB/SetUserInfo/参数");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1634, 14, true);
            WriteLiteral("\r\n            ");
            EndContext();
            BeginContext(1648, 101, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab8b4d116fa74e22aba7800fe28f4060", async() => {
                BeginContext(1714, 26, true);
                WriteLiteral("OcelotGatewayB/GetUserData");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1749, 14, true);
            WriteLiteral("\r\n            ");
            EndContext();
            BeginContext(1763, 94, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "271a82dc4f0348c081ba58c1620e01ba", async() => {
                BeginContext(1825, 23, true);
                WriteLiteral(" OcelotGatewayB/GetUser");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1857, 14, true);
            WriteLiteral("\r\n            ");
            EndContext();
            BeginContext(1871, 107, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fbd88e631f7d4a36932c2f862e97cb4c", async() => {
                BeginContext(1940, 29, true);
                WriteLiteral("OcelotGatewayA/SetUserInfo/参数");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1978, 14, true);
            WriteLiteral("\r\n            ");
            EndContext();
            BeginContext(1992, 101, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0fb524693bfe42269018e501c3687d54", async() => {
                BeginContext(2058, 26, true);
                WriteLiteral("OcelotGatewayA/GetUserData");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2093, 9011, true);
            WriteLiteral(@"
        </select>

    </p>
    <p>
        参数:<br />
        <textarea id=""paramTxt"" style=""width:1000px;height:20px;""></textarea><br />
        返回结果:<br />
        <textarea id=""resultText"" style=""width:1000px;height:200px;""></textarea>
    </p>
</div>
<script>

    function doJsRequest() {
        //http://localhost:39643/OcelotGatewayB/SetUserInfo/参数
        //http://localhost:39643/OcelotGatewayB/GetUserData
        //http://localhost:39643/OcelotGatewayB/GetUser

        var urlData = $('#actionUrl').val();
        var actionType = $('#actionType').val();
        var token = $('#tokenTxt').val();
        var param = $('#paramTxt').val();

        if (actionType=='get') {
            param = """";
        }

        $.ajax({
            url: urlData,
            type: actionType,
            headers: {
                ""Authorization"": ""Bearer "" + token,
            },
            //data: param,
            data: JSON.stringify(param),
            contentType: 'applicatio");
            WriteLiteral(@"n/json',
            complete: function (e, state) {
                //debugger;
                if (e.status == 200)
                    $('#resultText').val(e.responseText);
                else
                    $('#resultText').val(e.status + ""_"" + e.statusText);
            }
        });
    }

    function doAction() {
        var data = {
            actionType: $('#actionType').val(),
            url: $('#actionUrl').val(),
            token: $('#tokenTxt').val(),
            paramData: $('#paramTxt').val()
        }

        $.ajax({
            url: ""Home/DoApi"",
            type: ""POST"",
            data: JSON.stringify(data),
            contentType: 'application/json',
            complete: function (e, state) {
                debugger;
                if (e.status == 200)
                    $('#resultText').val(e.responseText);
                else
                    $('#resultText').val(e.status + ""_"" + e.statusText);
            }
        });//
    }

   ");
            WriteLiteral(@" //获取token
    function doClientCredentialsTokey() {
        //http://localhost:27749/api/Token/GetClientCredentials

        var requestData = {
            ""grant_type"": ""client_credentials"",
            //""scope"": ""apiA offline_access openid profile""
        };

        var urlData = $('#tokenUrl').val();
 
        $.ajax({
            url: urlData,
            type: ""POST"",
            data: requestData,
            //contentType: 'application/json',
            dataType: ""json"",
            headers: {
                //把用户组账号与key进行Base64_Encode编译后进行传输
                ""Authorization"": ""Basic "" + base64Encode(""client:secret"")
            },
            complete: function (e, status) {
                if (e.status == 200) {
                    $('#tokenTxt').val(e.responseJSON.access_token);
                    $('#refreshTokenTxt').val(e.responseJSON.refresh_token);
                } else {
                    $('#tokenTxt').val(e.statusText + e.responseText);
                   ");
            WriteLiteral(@" $('#refreshTokenTxt').val('');
                }
            }
        });
    }

    //获取token
    function doOwnerPasswordTokey() {
        //http://localhost:27749/connect/token
        //http://localhost:27749/api/Token/GetTokenOwnerPassword

        var urlData = $('#tokenUrl').val();

        var requestData = {
            ""grant_type"": ""password"",
            ""username"": ""zjf"",
            ""password"": ""zjf"",
            ""scope"": ""apiA offline_access""
        };
     
        $.ajax({
            url: urlData,
            type: ""POST"",
            data: requestData,
            //contentType: 'application/json',
            dataType: ""json"",
            headers: {
                //把用户组账号与key进行Base64_Encode编译后进行传输
                ""Authorization"": ""Basic "" + base64Encode(""clientCode:secretPass"")
            },
            complete: function (e, status) {
                //debugger;
                if (e.status == 200) {
                    $('#tokenTxt').val(e.responseJ");
            WriteLiteral(@"SON.access_token);
                    $('#refreshTokenTxt').val(e.responseJSON.refresh_token);
                } else {
                    $('#tokenTxt').val(e.statusText + e.responseText);
                    $('#refreshTokenTxt').val('');
                }
            }
        });
    }

    //刷新token
    function doRefreshTokey() {
        //远程控制器服务地址
        var urlData = ""http://localhost:27749/api/Token/GetTokenRefreshToken"";
        var requestData =  $('#refreshTokenTxt').val();

        //$.ajax({
        //    url: urlData,
        //    type: ""POST"",
        //    data: JSON.stringify(requestData),
        //    contentType: 'application/json',
        //   //dataType: ""json"",
        //    headers: {
        //        //把用户组账号与key进行Base64_Encode编译后进行传输
        //        ""Authorization"": ""Basic "" + base64Encode(""clientAnd:secretPass"")
        //    },
        //    complete: function (e, status) {
        //        if (e.status == 200) {
        //            $('#toke");
            WriteLiteral(@"nTxt').val(e.responseJSON.access_token);
        //            $('#refreshTokenTxt').val(e.responseJSON.refresh_token);
        //        } else {
        //            $('#tokenTxt').val(e.statusText + e.responseText);
        //            $('#refreshTokenTxt').val('');
        //        }
        //    }
        //});
        
        //js方式刷新
        //clientRefreshTokens
        urlData = $('#tokenUrl').val();
        $.ajax({
            url: urlData,
            type: ""post"",
            data: { ""grant_type"": ""refresh_token"", refresh_token: requestData },
            dataType: ""json"",
            headers: {
                ""Authorization"": ""Basic "" + base64Encode(""clientCode:secretPass"")
            },
            complete: function (e, status) {
                //debugger;
                if (e.status == 200) {
                    $('#tokenTxt').val(e.responseJSON.access_token);
                    $('#refreshTokenTxt').val(e.responseJSON.refresh_token);
                } else");
            WriteLiteral(@" {
                    $('#tokenTxt').val(e.statusText + e.responseText);
                    $('#refreshTokenTxt').val('');
                }
            }
        });

    }

    //获取token(测试用)
    function doTokeyAction() {
        //http://localhost:27749/connect/token
        //http://localhost:27749/api/Token/
        //http://localhost:27749/api/Token/GetTokenOwnerPassword
        //http://localhost:27749/api/Token/GetClientCredentials

        var urlData = ""http://localhost:27749/api/Token/GetClientCredentials"";
        var requestData = ""grant_type=password&username=zjf&password=zjf"";

        $.ajax({
            url: urlData,
            type: ""POST"",
            //data: requestData,
            //contentType: 'application/json',
            //dataType: ""json"",
            //headers: {
            //    //把用户组账号与key进行Base64_Encode编译后进行传输
            //    ""Authorization"": ""Basic "" + base64Encode(""clientRefreshTokens:secretPass"")
            //},
            complete: f");
            WriteLiteral(@"unction (e, status) {
                debugger;
                if (e.status == 200) {
                    $('#tokenTxt').val(e.responseJSON.access_token);
                    $('#refreshTokenTxt').val(e.responseJSON.refresh_token);
                } else {
                    $('#tokenTxt').val(e.statusText + e.responseText);
                    $('#refreshTokenTxt').val('');
                }
            }
        });
    }

    function urlSelect() {
        $('#actionUrl').val($('#urlSelect').val());
    }

    function base64Encode(str) {
        //进行编码否则服务端无法获取用户验证信息
        var c1, c2, c3;
        var base64EncodeChars = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"";
        var i = 0, len = str.length, string = '';

        while (i < len) {
            c1 = str.charCodeAt(i++) & 0xff;
            if (i === len) {
                string += base64EncodeChars.charAt(c1 >> 2);
                string += base64EncodeChars.charAt((c1 & 0x3) << 4);
           ");
            WriteLiteral(@"     string += ""=="";
                break;
            }
            c2 = str.charCodeAt(i++);
            if (i === len) {
                string += base64EncodeChars.charAt(c1 >> 2);
                string += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));
                string += base64EncodeChars.charAt((c2 & 0xF) << 2);
                string += ""="";
                break;
            }
            c3 = str.charCodeAt(i++);
            string += base64EncodeChars.charAt(c1 >> 2);
            string += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));
            string += base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >> 6));
            string += base64EncodeChars.charAt(c3 & 0x3F);
        }
        return string;
    }

</script>
 
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
